esphome:
  name: batterytemp
  friendly_name:  BatteryTemp

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Cb1jgZfXcFuBw+h8I0uVplA9JK4s+lowsjPi/xP9BUE="

ota:
  password: "ca9f8cbfd49909568dcac3dd046f9690"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.144.85
    gateway: 192.168.144.1
    subnet: 255.255.255.0


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Batterytemp Fallback Hotspot"
    password: "3IL8Hp7aFXMo"

captive_portal:
    
i2c:
  sda: 4
  scl: 5
  frequency: 40kHz
  
sensor:
  - platform: sht3xd
    temperature:
      name: "Temperature2"
      id: temp2temp
    humidity:
      name: "Humidity2"
      id: temp2humidity
    address: 0x45
    update_interval: 10s
  - platform: adc
    pin: A0
    name: "Battery Voltage"
    update_interval: 10s
    filters:
      - multiply: 4.4
text_sensor:
  - platform: homeassistant
    id: batterytempupdate
    entity_id: update.batterytemp_firmware
    internal: true
    on_value:
      then:
        - lambda: |-
            if (id(batterytempupdate).state == "on") {
              ESP_LOGD("update","Needs update");
              id(deep_sleep_1).prevent_deep_sleep();
            } else {
              ESP_LOGD("update","No update");
            }
          
deep_sleep:
  run_duration: 15s
  sleep_duration: 5min
  id: deep_sleep_1

# - deep_sleep.prevent: deep_sleep_1
#  id(deep_sleep_1).prevent_deep_sleep();