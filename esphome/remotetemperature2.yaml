esphome:
  name: remotetemperature2
  friendly_name: RemoteTemperature2

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "zrwnGt19xkWcLh9FedilIHLXrIwo/9+Cf3ZwTBYgZNE="

ota:
  password: "2c829b12c77ab0d7f1ab7b2b3a5bcb91"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.144.65
    gateway: 192.168.144.1
    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Remotetemperature2"
    password: "4caSSlSj54Ca"

captive_portal:
    
time:
  - platform: homeassistant
    id: esptime

i2c:
  sda: 4
  scl: 5
  frequency: 800kHz


sensor:
  - platform: sht3xd
    temperature:
      name: "Temperature2"
      id: temp2temp
    humidity:
      name: "Humidity2"
      id: temp2humidity
    address: 0x45
    update_interval: 10s
  - platform: homeassistant
    id: outside_temp
    entity_id: sensor.openweathermap_temperature
    internal: true
  - platform: homeassistant
    id: outside_humidity
    entity_id: sensor.openweathermap_humidity
    internal: true

font:
  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: roboto
    size: 55

  - file:
      type: gfonts
      family: Roboto
      weight: 900
    id: font2
    size: 10
  - file:
      type: gfonts
      family: Roboto
    id: font3
    size: 53

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3D
    id: display1
    pages:
          - id: page1
            lambda: |-
              it.printf(0, 0, id(roboto), "%.0f°", id(temp2temp).state * (9.0/5.0) + 32.0 );
              it.line(0, 54, 128,54 );
              it.print(0,55, id(font2), "Inside" );
          - id: page2
            lambda: |-
              it.printf(0, 0, id(roboto), "%.0f°", id(outside_temp).state );
              it.line(0, 54, 128,54 );
              it.print(0,55, id(font2), "Outside" );
          - id: page3
            lambda: |-
              it.printf(0,0, id(roboto), "%.0f%%", id(temp2humidity).state );
              it.line(0, 54, 128,54 );
              it.print(0,55, id(font2), "Inside" );
          - id: page4
            lambda: |-
              it.printf(0,0, id(roboto), "%.0f%%", id(outside_humidity).state );
              it.line(0, 54, 128,54 );
              it.print(0,55, id(font2), "Outside" );
          - id: page5
            lambda: |-
              it.strftime(0, 0, id(font3), "%I:%M", id(esptime).now());

# For example cycle through pages on a timer
interval:
  - interval: 2s
    then:
      - display.page.show_next: display1
      - component.update: display1